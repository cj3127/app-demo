# 服务器配置
server:
  port: 8080 # 应用端口（与 docker-compose 一致）
  servlet:
    context-path: / # 上下文路径（默认根路径）

# Spring 配置
spring:
  # 1. MySQL 配置（环境变量占位符，由 docker-compose 传递）&allowPublicKeyRetrieval=true
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://192.168.121.223:3306/app_demo?useSSL=false&serverTimezone=UTC&serverTimezone=UTC&allowPublicKeyRetrieval=true}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:123456}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-init-sql: USE app_demo;
  # 2. JPA 配置（简化数据库操作）
  jpa:
    hibernate:
      ddl-auto: none # 禁用自动建表（用 init.sql 手动建表，避免冲突）
    show-sql: true # 控制台打印 SQL（开发/测试用，生产可关闭）
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        default_schema: app_demo  # 关键配置：全局强制带app_demo库名
        format_sql: true  # 可选：格式化SQL日志，便于查看
    open-in-view: false # 关闭 OpenSessionInView（避免事务问题）

  # 3. Redis 配置（环境变量占位符，默认本地 Redis）这里遇到了一个错误，redis是集群，写成了单机连接池
  redis:
    cluster:
      # 节点列表：用逗号分隔多个 "host:port"，或每个节点单独一行（推荐后者，更清晰）
      nodes:
        - 192.168.121.171:6379
        - 192.168.121.172:6379
        - 192.168.121.173:6379  
      max-redirects: 3  # 整数类型，无需引号
      timeout: 5000  # 毫秒，无需引号
    password: ${SPRING_REDIS_PASSWORD:123456} # 若 Redis 无密码，留空
    lettuce:
      pool:
        max-active: 8 # 最大连接数
        max-idle: 8 # 最大空闲连接
        min-idle: 2 # 最小空闲连接
        max-wait: 1000ms # 连接等待时间

# 4. Actuator 配置（健康检查，适配 docker-compose healthcheck）
management:
  endpoints:
    web:
      exposure:
        include: health,info # 暴露健康检查和基础信息接口
  endpoint:
    health:
      show-details: always # 显示健康检查详情（测试用，生产可设为 when_authorized）

# 5. 日志配置（简化版：输出到控制台，便于容器日志查看）
logging:
  level:
    root: INFO
    com.demo: DEBUG # 应用包日志级别（DEBUG 便于排查问题）
  pattern:

    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"













